@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChart</span> <span class="htmlAttributeName">ChartType</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">ChartType</span><span class="enumValue">.Line</span><span class="quot">&quot;</span> <span class="htmlAttributeName">ChartSeries</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="sharpVariable"><span class="atSign">&#64;</span>Series</span><span class="quot">&quot;</span> <span class="htmlAttributeName">XAxisLabels</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="sharpVariable"><span class="atSign">&#64;</span>XAxisLabels</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Width</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">650</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Height</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">350</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span><span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChart</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {

    <span class="keyword">public</span> List&lt;ChartSeries&gt; Series = <span class="keyword">new</span> List&lt;ChartSeries&gt;();
    <span class="keyword">public</span> ChartOptions Options = <span class="keyword">new</span> ChartOptions();
    <span class="keyword">public</span> <span class="keyword">string</span>[] XAxisLabels = { <span class="string">&quot;1986-04-20&quot;</span>, <span class="string">&quot;1986-04-21&quot;</span>, <span class="string">&quot;1986-04-22&quot;</span>, <span class="string">&quot;1986-04-23&quot;</span>, <span class="string">&quot;1986-04-24&quot;</span>, <span class="string">&quot;1986-04-25&quot;</span>, <span class="string">&quot;1986-04-26&quot;</span> };

    <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> OnInitialized()
    {
        <span class="keyword">double</span>[] Data1 = { <span class="number">65</span>, <span class="number">68</span>, <span class="number">70</span>, <span class="number">74</span>, <span class="number">74</span>, <span class="number">72</span>, <span class="number">74</span> };
        <span class="keyword">double</span>[] Data2 = { <span class="number">88</span>, <span class="number">90</span>, <span class="number">91</span>, <span class="number">92</span>, <span class="number">91</span>, <span class="number">90</span>, <span class="number">90</span> };
        <span class="keyword">double</span>[] Data3 = { <span class="number">89</span>, <span class="number">91</span>, <span class="number">92</span>, <span class="number">92</span>, <span class="number">92</span>, <span class="number">92</span>, <span class="number">91</span> };
        <span class="keyword">double</span>[] Data4 = { <span class="number">85</span>, <span class="number">86</span>, <span class="number">90</span>, <span class="number">90</span>, <span class="number">92</span>, <span class="number">99</span>, <span class="number">0</span> };


        Series.Add(<span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Chernobyl-1&quot;</span>, Data = Data1 });
        Series.Add(<span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Chernobyl-2&quot;</span>, Data = Data2 });
        Series.Add(<span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Chernobyl-3&quot;</span>, Data = Data3 });
        Series.Add(<span class="keyword">new</span> ChartSeries() { Name = <span class="string">&quot;Chernobyl-4&quot;</span>, Data = Data4 });

        Options.YAxisTicks = <span class="number">400</span>;

        StateHasChanged();
    }
}
</pre></div>
</div>

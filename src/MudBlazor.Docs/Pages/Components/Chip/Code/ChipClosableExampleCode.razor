@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChip</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Default</span><span class="quot">&quot;</span> <span class="htmlAttributeName">OnClose</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">Closed</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Closable<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChip</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChip</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Error</span><span class="quot">&quot;</span> <span class="htmlAttributeName">OnClose</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">Closed</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Closable<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChip</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChip</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Primary</span><span class="quot">&quot;</span> <span class="htmlAttributeName">OnClose</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">Closed</span><span class="quot">&quot;</span> <span class="htmlAttributeName">CloseIcon</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>Icons.Material.AlarmAdd</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Closable<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChip</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudChip</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Success</span><span class="quot">&quot;</span> <span class="htmlAttributeName">OnClose</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">Closed</span><span class="quot">&quot;</span> <span class="htmlAttributeName">CloseIcon</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>Icons.Material.AlarmOn</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Closable<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudChip</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {
    <span class="keyword">void</span> Closed(MudChip chip) {
        <span class="comment">// react to chip closed</span>
    }
}
</pre></div>
</div>
